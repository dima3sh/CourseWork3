<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIACoJQAAFgAAACgAAAAwAAAAYAAAAAEAIAAAAAAAgCUAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAQAAAAEAAAACAAAAAwAAAAUAAAAIAAAACwAAAA4AAAATAAAAFwAAABYAAAAOAAAABQAA
        AAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAQAA
        AAMAAAAEAAAABgAAAAkAAAAMAAAAEAAAABUAAAAbAAAAIQAAACgAAAAwAAAAOAAAAEAAAABIAAAATgAA
        AEwAAAA7AAAAJQAAABMAAAAIAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAQAAAAHAAAACgAA
        AA4AAAASAAAAFwAAAB0AAAAjAAAAKwAAADMAAAA7AAAAQwAAAEsAAABTAAAAWgAAAGEAAABnAAAAbQAA
        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
        KP8qKSv/LSwv/zEwMv81Mzb/ODY5/zs5PP89PD7/QD5A/0JAQv9DQUP/RENF/0VDRf8oJyn/GRkb/xYV
        GP8kIyX/PT09/5WUk/+IiIf/tbW0/3x7e/9PTk7/CgoL/wwMDf8gHyD/SkhI/0xJSv81MzT/IB4g/xIR
        E/8TEhX/FRQX/RgXGe8wMDD+XFxc/2VlZf8qKiq+AAAAFQAAAAU8Oj6PR0VH/01LTf9SUFL/WVdZ/15c
        Xv9aWFn/UVBR/0dGR/89PD3/NTQ1/zU0Nf89PD3/TEtM/1BOUP9PTU//Tk1O/05MTv9NS03/TEtM/0xK
        TP8oJyr/GRgb/xcWGf8XFhn/Nzc3/3Rzc/9zcnL/eHh3/6Oiof8jIyP/CgoL/w4OEP8ODQ//EBAR/yIh
        I/81MzT/Pz0+/zw6O/8qKCn/Hh0f/xcWGf8pKSn/i4uK/3p5ef9HRkb7HBwcJAAAAAFIRkhbW1la/19e
        X/95eHn/WVlZ/0pKSv9KSkr/Q0ND/0dHR/9OTk7/VFRU/1hYWP9YWFj/Tk5O/1BPUP9FQ0X/RENE/0xK
        TP9QT1D/UE5Q/09OT/8qKSz/Ghkc/xgXG/8XFhn/LCss/y8vL/+Pjo3/tbSz/3h3dv8FBQX/DQ0P/xEQ
        Ev8QDxH/ERET/xIRFP8TEhX/FRQW/xsaHP8eHB//IB8h/xwbHv8vLy//mJeW/8HAv/9fX1//HR0dgAAA
        AABJREQtVFNU/lJRUv9nZ2f/Pj4+/0dHR/9NTU3/UlJS/11dXf9iYmL/ZWVl/2NjY/9eXl7/VVVV/1BQ
        UP9BQEH/UVFR/4uLi/+Pj4//ZmZn/2ZmZv9HRkj/JCMm/xcWGf8YFxv/GBca/zQ0NP8aGhr/GRkZ/wgI
        CP8FBQX/EhIU/xMSFP8SERP/ExMV/xQTFv8VFBf/FhUY/xcWGf8XFhn/Ghkc/xsaHv8xMDH/mZiX/9va
        2f90c3P/Gxsc8RUVFQwAAAADYWFh2JGRkv9qaWr/VFRU/19fX/9nZ2f/ampq/21tbf9wcHD/b29v/2lp
        af9fX1//Wlpa/1ZVVv9ZWFn/WFdY/729vf/Ly8v/vb29/+jo6P/P0NH/dLfY/22lxf9GR0r/GRgb/xkY
        G/8pKCr/Gxob/wwMDf8SEhT/FRQX/xUUF/8UExX/FRUX/xYVGP8XFhn/GBca/xkYG/8YFxr/Gxoe/x0c
        H/8qKiz/gYCA/769vP97enr/Gxoc/yEhJjUAAAAAra2vbamoqf9paGn/TExM/1BQUP9UVFT/V1dX/1pa
        Wv9XV1f/U1JS/09OT/9QT1D/WVhZ/2RjZP9paGn/YmBi/2JhYv9tbG3/eXh5/5KRkv+cm53/gqK1/26w
        2f93jqL/Hx4h/xoZHP8ZGBv/GBca/xcXGv8XFhn/FxYZ/xcWGf8WFRf/Fxca/xgXGv8ZGBv/GRkc/xoa
        Hf8aGRz/HRwf/x4dIf8lJCf/X15e/4SDgv91dHT/HBsd/yUlKFIAAAAAf39/CmZjZNJ8e3v/lJOT/46M
        jf+JiIj/hYSE/4KBgf+Af4D/f31+/358fv99e3z/eXh5/3RzdP9vbm//amhq/2VjZf9hX2H/Xl1e/11b
        Xf9ZWFn/Q0FD/zw6PP9BQEP/Pjw9/zAuMP8gHyL/Ghkc/xoZHP8ZGBz/GRgb/xkYG/8YFxr/GRkc/xoZ
        HP8bGh3/Gxoe/xwbH/8cGx7/Hh0h/yAfI/8hICT/LS0u/1ZWVf8YGBj/IiIk/ycnKWIAAAAAAAAAAEhI
        SA5cWVuMdHN074uKi/+RkJD/jo2O/4qJiv+GhIX/gX+A/3x7fP93dnf/cnBy/21rbf9oZ2j/ZWRl/2Ni
        Y/9iYGL/YWBh/2FfYf9gXmD/X15f/1xbXP9PTU//RkRG/0A+QP9EQUL/Pz0+/zY0Nv8vLS//KScq/yQi
        Jf8dHB7/HBsf/xwbH/8cGx//HRwf/x4dIf8dHCD/IB8j/yEgJP8iISX/JCMm/yEgIf8bGhv/KSgr/ygo
        Kl8AAAAAAAAAAAAAAAAAAAAAVURED1pXWl1raGqtcnBw7Xl3eP97eXr/eXd4/3Z0df9ycXL/b25v/21s
        bf9ramv/aWhp/2dmZ/9mZGb/ZWNl/2RjZP9jYmP/Y2Fj/2JhYv9hYGH/YV9h/15cXv9TUVP/SklK/0RC
        Q/9EQUL/RkRF/0E+Pv9CP0D/Pjs9/zg2N/8vLi//IyIj/yUkJ/8kIiX/JCMn/yQjJ/8mJSj/KCYp/zAu
        MP8yMDL/MjAy/ysoK1IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPz8/CFVVVTZbWVtyX15eqGFg
        YdtmZWb9b25v/3Jwcf9wbm//bmxt/2tqa/9qaGr/ZGNk/2FgYf9cWlz/VVRV/09OT/9GRUb/Pz4//zc2
        N/8wLzD/KCco/x8eH/8PDxD/NzU2/x0cHP8VFBT/IB8g/ykoKf80MjP/LSwu/zUzNf8zMTL/MzEz/y0s
        Lf8uLC7/MC0v/zMxM/8zMTP/NDI0/zY2Nj0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAcHB9ZDAwM/wwMC/8NDAz/CQkI/wkJCP8LCgr/DQ0M/xAPDv8VFBP/GxoY/yQh
        H/8vKyj/OjUx/0hCPf9XUEr/aF9X/3txZ/+NgHX/Vk9L/z89PP89Ojn/ISEj/xcWGP8GBQb/JyUk/yMh
        If8zMTH/MS8x/ywqLP8uLC7/MjAy/zMxM/8zMTP/V1ZX811dXRMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0NDRSTk1N7klGQ/trZmH/YFxY/1lWUf9WU0//VlNP/1lV
        Uf9eWVT/Y15Y/2ljXf9waWL/eG9n/392bf+IfXP/kIR6/5mMgP+ik4f/hHhu/zw6Ov9XVFD/UlBP/zw6
        O/9FQT//NTIv/y4qJ/9/dW3/e3Fo/zs2Mv9hWVP/MC4u/zEvMeEuLTCegYGBSQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASEhIDhoaGiZaVlLFdXFt/2ll
        Yf9eW1f/V1RQ/1ZTT/9aVlH/XlpV/2RfWf9rZF7/cmpj/3lwaP+Bd27/iX50/5KGe/+bjYH/oZOG/0tH
        Rf9MSEX/WFVQ/1ZTT/9aVlL/IiAf/0RAPP93b2f/g3lw/01HQf9pYFn/MC4w8y0tLTIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAANWVZUs3x4dP5xbmr/ZmNf/11aVv9ZVlH/W1dS/19bVv9lYFr/bGVf/3NrZP96cmn/gnhv/4p/
        df+Th3z/nI6C/2dfWf9HQ0H/XVlU/1dUUP9WU0//FhQT/2VfWv+Bd3H/jH95/1xRT/8vLS/1MC0wSQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAABU5MS4h5dnL7eXZy/3Btaf9nZWH/Y19b/2JeWv9lYVz/a2Zg/3Js
        Zv96c2z/hHt0/46EfP+Zj4b/pZqR/3lybP9IRUX/VlFN/2JdWP9aVVH/My0s/3RrZ/95cGv/VE1K/zEu
        MN8zLjM8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0MDA6T01NrlRTUvtaWVj/WlhX/1pY
        V/9bWVj/Xlta/2NgXv9lYmD/aGVj/2pnZf9raGf/ZmRk/2tqa/9TUVL/REFC/zw5Of83NDT/MjAw/zo4
        N/4xLzDmMzEzgDMzMw8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEU5
        RRZRTlFeWFdYmF5bXsNhYGHkZmVm82hnaPloZmj7aGZo/mdmZ/tnZmf6ZWRl9mBfYPFcW1zhW1pbyVJP
        UqtGREaKPTs9Yy0tMjMAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAODg4CUNDQxM/Pz8YQUFBHz09PRlFOUUWNjY2Dj8A
        PwQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///////8AAP///////wAA////////
        AAD///////8AAP///////wAA///4////AAD/+AAf//8AAPwAAAf//wAAgAAAAP//AAAAAAAAP/8AAAAA
        AAAP/wAAgAAAAAH/AACAAAAAAH8AAAAAAAAAHwAAAAAAAAADAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAgAAAAAAAAADAAAAAAAAAAPAA
        AAAAAAAA/gAAAAAAAAD/8AAAAAAAAP/wAAAAAQAA//gAAAAHAAD//gAAAA8AAP//AAAAHwAA///AAAA/
        AAD///AAAP8AAP///4B//wAA////////AAD///////8AAP///////wAA////////AAD///////8AAP//
        /////wAA////////AAD///////8AAP///////wAA////////AAD///////8AAP///////wAA////////
        AAA=
</value>
  </data>
</root>